import tkinter as tk
from tkinter import ttk, messagebox
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline

# Load dataset
from sklearn.datasets import fetch_20newsgroups
data = fetch_20newsgroups(subset='train', categories=['soc.religion.christian', 'sci.med'])
df = pd.DataFrame({'text': data.data, 'label': data.target})

# Train the model
model = make_pipeline(TfidfVectorizer(), MultinomialNB())
model.fit(df['text'], df['label'])

def classify_text(text):
    prediction = model.predict([text])[0]
    return data.target_names[prediction]

def on_classify():
    user_input = text_input.get("1.0", tk.END).strip()
    if user_input:
        result = classify_text(user_input)
        messagebox.showinfo("Classification Result", f"Classification: {result}")
    else:
        messagebox.showwarning("Input Error", "Please enter a message to classify.")

# Set up the GUI
root = tk.Tk()
root.title("Spam Detection App")

frame = ttk.Frame(root, padding="10")
frame.grid(row=0, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))

text_label = ttk.Label(frame, text="Enter a message to classify:")
text_label.grid(row=0, column=0, sticky=tk.W)

text_input = tk.Text(frame, height=10, width=50)
text_input.grid(row=1, column=0, sticky=(tk.W, tk.E))

classify_button = ttk.Button(frame, text="Classify", command=on_classify)
classify_button.grid(row=2, column=0, sticky=(tk.W, tk.E))

root.mainloop()
